name: Build

on:
  workflow_call:
    inputs:
      docker-tag:
        required: true
        type: string
      docker-registry:
        required: false
        type: string
        default: docker.eventstore.com/eventstore-ce/eventstoredb-ce
      build-matrix:
        required: false
        type: string
        default: '["Streams", "PersistentSubscriptions", "Operations", "UserManagement", "ProjectionManagement"]'
      test-matrix:
        required: false
        type: string
        default: '["Streams", "PersistentSubscriptions", "Operations", "UserManagement", "ProjectionManagement"]'

jobs:
  test:
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        framework: [ net6.0, net7.0, net8.0 ]
        os: [ ubuntu-latest ]
        build: ${{fromJson(inputs.build-matrix)}}
        test: ${{fromJson(inputs.test-matrix)}}
        configuration: [ release ]
    runs-on: ${{ matrix.os }}
    name: EventStore.Client.${{ matrix.test }}/${{ matrix.os }}/${{ matrix.framework }}/${{ inputs.docker-tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - shell: bash
        run: |
          git fetch --prune --unshallow

      - name: Login to Cloudsmith
        uses: docker/login-action@v3
        with:
          registry: docker.eventstore.com
          username: ${{ secrets.CLOUDSMITH_CICD_USER }}
          password: ${{ secrets.CLOUDSMITH_CICD_TOKEN }}

      - name: Pull EventStore Image
        shell: bash
        run: |
          docker pull ${{ inputs.docker-registry }}:${{ inputs.docker-tag }}
      - name: Install dotnet SDKs
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.0.x
            7.0.x
            8.0.x
      - name: Compile
        shell: bash
        run: |
          dotnet build --configuration ${{ matrix.configuration }} --framework ${{ matrix.framework }} src/EventStore.Client.${{ matrix.build }}
      - name: Run Tests
        shell: bash
        env:
          ES_DOCKER_TAG: ${{ inputs.docker-tag }}
          ES_DOCKER_REGISTRY: ${{ inputs.docker-registry }}
        run: |
          sudo ./gencert.sh
          dotnet test --configuration ${{ matrix.configuration }} --blame \
            --logger:"GitHubActions;report-warnings=false" --logger:"console;verbosity=normal" \
            --framework ${{ matrix.framework }} \
            test/EventStore.Client.${{ matrix.test }}.Tests
