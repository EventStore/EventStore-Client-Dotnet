name: Regression

on:
  pull_request:
  push:
    branches:
    - master
    tags:
    - v*
  schedule:
    - cron: '0 0 2 * *'
env:
  DOTNET_SDK_VERSION: 3.1.302
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-18.04 ]
        test: [ "", .Streams, .PersistentSubscriptions, .Operations, .UserManagement, .ProjectionManagement ]
        configuration: [ release ]
        docker-tag: [ 'ci' ]
        version: [ '20.6.0' ]
    runs-on: ${{ matrix.os }}
    name: regression-${{ matrix.os }}/EventStore.Client${{ matrix.test }}-${{ matrix.version }}
    steps:
    - name: Checkout Master
      uses: actions/checkout@v2
    - name: Pull Server Image
      shell: bash
      run: |
        docker pull ghcr.io/eventstore/eventstore:${{ matrix.docker-tag }}
    - name: Checkout Version
      uses: actions/checkout@v2
      with:
        ref: ${{ matrix.version }}-regressions
    - shell: bash
      run: |
        git fetch --prune --unshallow
    - name: Install Dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_SDK_VERSION }}
    - name: Compile
      shell: bash
      run: |
        dotnet build --configuration ${{ matrix.configuration }} src/EventStore.Client${{ matrix.test }}
    - name: Run Tests
      shell: bash
      env:
        ES_DOCKER_TAG: ${{ matrix.docker-tag }}
      run: |
        ./gencert.sh
        dotnet test --configuration ${{ matrix.configuration }} --blame \
        --logger:html --logger:trx --logger:"console;verbosity=normal" \
        --results-directory=$(pwd)/test-results/test/EventStore.Client${{ matrix.test }}.Tests \
        test/EventStore.Client${{ matrix.test }}.Tests
    - name: Collect Test Results
      shell: bash
      if: always()
      run: |
        echo $(find ./test-results -name "*.html" | xargs cat) > test-results.html
    - name: Publish Test Results (HTML)
      uses: actions/upload-artifact@v1
      if: always()
      with:
        path: test-results.html
        name: test-results-${{ matrix.configuration }}-EventStore.Client${{ matrix.test }}-${{ matrix.version }}$.html
    - name: Publish Test Results (All)
      uses: actions/upload-artifact@v1
      if: always()
      with:
        name: test-results-${{ matrix.configuration }}-EventStore.Client${{ matrix.test }}-${{ matrix.version }}
        path: test-results
